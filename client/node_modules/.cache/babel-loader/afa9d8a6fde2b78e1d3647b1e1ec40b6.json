{"ast":null,"code":"var _jsxFileName = \"/Users/megangoodling/Projects/megans-website/client/src/components/molecules/UnicornInput/UnicornInput.js\";\nimport React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nimport axios from 'axios';\n\nclass UnicornInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      avatar: '',\n      foodLevel: 0\n    };\n\n    this.addUnicorn = () => {\n      const task = {\n        name: this.state.name,\n        avatar: this.state.avatar,\n        foodLevel: this.state.foodLevel\n      };\n\n      if (task.name && task.name.length > 0 && task.avatar && task.avatar.length > 0) {\n        axios.post('/api/unicorns', task).then(res => {\n          if (res.data) {\n            this.props.getUnicorns();\n            this.setState({\n              name: '',\n              avatar: '',\n              foodLevel: 0\n            });\n          }\n        }).catch(err => console.log(err));\n      } else {\n        if (!task.name) {\n          console.log('name field required');\n        }\n\n        if (!task.avatar) {\n          console.log('avatar field required');\n        }\n      }\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleAvatarChange = e => {\n      this.setState({\n        avatar: e.target.value\n      });\n    };\n  }\n\n  render() {\n    let {\n      name\n    } = this.state;\n    let {\n      avatar\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"UnicornInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleNameChange,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Avatar: \"), React.createElement(RadioGroup, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(RadioButton, {\n      value: avatar,\n      onChange: this.handleAvatarChange(\"cupcake\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Cupcake\"), React.createElement(RadioButton, {\n      value: \"icecream\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Ice Cream\"))), React.createElement(\"button\", {\n      onClick: this.addUnicorn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"add unicorn\"));\n  }\n\n}\n\nexport default UnicornInput;","map":{"version":3,"sources":["/Users/megangoodling/Projects/megans-website/client/src/components/molecules/UnicornInput/UnicornInput.js"],"names":["React","Component","RadioGroup","RadioButton","axios","UnicornInput","state","name","avatar","foodLevel","addUnicorn","task","length","post","then","res","data","props","getUnicorns","setState","catch","err","console","log","handleNameChange","e","target","value","handleAvatarChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { RadioGroup, RadioButton } from 'react-radio-buttons'\nimport axios from 'axios'\n\nclass UnicornInput extends Component {\n\n  state = {\n    name: '',\n    avatar: '',\n    foodLevel: 0\n  }\n\n  addUnicorn = () => {\n    const task = {name: this.state.name,\n                  avatar: this.state.avatar,\n                  foodLevel: this.state.foodLevel}\n\n    if(task.name && task.name.length > 0 && task.avatar && task.avatar.length > 0){\n      axios.post('/api/unicorns', task)\n        .then(res => {\n          if(res.data){\n            this.props.getUnicorns()\n            this.setState({name: '', avatar: '', foodLevel: 0})\n          }\n        })\n        .catch(err => console.log(err))\n    } else {\n      if (!task.name){\n        console.log('name field required')\n      }\n      if (!task.avatar){\n        console.log('avatar field required')\n      }\n    }\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleAvatarChange = (e) => {\n    this.setState({\n      avatar: e.target.value\n    })\n  }\n\n  render () {\n    let { name } = this.state\n    let { avatar } = this.state\n    return (\n      <div className='UnicornInput'>\n        <div>\n          <p>Name: </p>\n          <input type='text' onChange={this.handleNameChange} value={name} />\n          <p>Avatar: </p>\n          {/* <input type='radio' onChange={this.handleAvatarChange} value={avatar} /> */}\n          {/* <div>\n            <label>\n            <input type=\"radio\" name=\"avatar\" value=\"cupcake\" onChange={this.handleAvatarChange} unchecked />\n            Cupcake</label>\n          </div>\n\n          <div>\n            <label>\n            <input type=\"radio\" name=\"avatar\" value=\"icecream\" onChange={this.handleAvatarChange} unchecked />\n            Ice Cream</label>\n          </div> */}\n\n          <RadioGroup horizontal>\n            <RadioButton value={avatar} onChange={ this.handleAvatarChange(\"cupcake\") } >\n              Cupcake\n            </RadioButton>\n            <RadioButton value=\"icecream\">\n              Ice Cream\n            </RadioButton>\n          </RadioGroup>\n          \n        </div>\n        <button onClick={this.addUnicorn}>add unicorn</button>\n      </div>\n    )\n  }\n}\n\nexport default UnicornInput"]},"metadata":{},"sourceType":"module"}