{"ast":null,"code":"var _jsxFileName = \"/Users/megangoodling/Projects/Todo/client/src/components/organisms/Header/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport { DesktopNavBar, MobileNavBar, Sidepanel, Backdrop } from 'molecules';\nimport './Header.css';\n\nconst Header = () => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 950);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 980);\n      setIsOpen(false);\n    };\n\n    window.addEventListener('resize', handleResize);\n  }, []);\n\n  const backdropClickHandler = updateIsOpen => {\n    setIsOpen(updateIsOpen);\n  };\n\n  const createMobileNav = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(MobileNavBar, {\n      parentCallback: () => setIsOpen(!isOpen),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Sidepanel, {\n      isOpen: isOpen,\n      backdropClickHandler: backdropClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Backdrop, {\n      alt: \"Backdrop\",\n      isOpen: isOpen,\n      backdropClickHandler: backdropClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, isMobile ? createMobileNav() : React.createElement(DesktopNavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/megangoodling/Projects/Todo/client/src/components/organisms/Header/Header.js"],"names":["React","useState","useEffect","DesktopNavBar","MobileNavBar","Sidepanel","Backdrop","Header","isMobile","setIsMobile","window","innerWidth","isOpen","setIsOpen","handleResize","addEventListener","backdropClickHandler","updateIsOpen","createMobileNav"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAiE,WAAjE;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACS,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAG,MAAM;AACzBL,MAAAA,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAX;AACAE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHD;;AAIAH,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,oBAAoB,GAAIC,YAAD,IAAkB;AAC7CJ,IAAAA,SAAS,CAACI,YAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,cAAc,EAAE,MAAML,SAAS,CAAC,CAACD,MAAF,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEA,MAAnB;AAA2B,MAAA,oBAAoB,EAAEI,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAC,UAAd;AAAyB,MAAA,MAAM,EAAEJ,MAAjC;AAAyC,MAAA,oBAAoB,EAAEI,oBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIR,QAAQ,GAAGU,eAAe,EAAlB,GAAuB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnC,CADF;AAKD,CA/BD;;AAiCA,eAAeX,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { DesktopNavBar, MobileNavBar, Sidepanel, Backdrop } from 'molecules'\nimport './Header.css'\n\nconst Header = () => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 950)\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 980)\n      setIsOpen(false)\n    }\n    window.addEventListener('resize', handleResize)\n  }, [])\n\n  const backdropClickHandler = (updateIsOpen) => {\n    setIsOpen(updateIsOpen)\n  }\n\n  const createMobileNav = () => {\n    return (\n      <div>\n        <MobileNavBar parentCallback={() => setIsOpen(!isOpen)}/>\n        <Sidepanel isOpen={isOpen} backdropClickHandler={backdropClickHandler} />\n        <Backdrop alt='Backdrop' isOpen={isOpen} backdropClickHandler={backdropClickHandler} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      { isMobile ? createMobileNav() : <DesktopNavBar /> }\n    </div>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}