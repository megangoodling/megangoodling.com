{"ast":null,"code":"import _classCallCheck from\"/Users/megangoodling/Projects/megans-website/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/megangoodling/Projects/megans-website/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/megangoodling/Projects/megans-website/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/megangoodling/Projects/megans-website/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/megangoodling/Projects/megans-website/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{RadioGroup,RadioButton}from'react-radio-buttons';import axios from'axios';var UnicornInput=/*#__PURE__*/function(_Component){_inherits(UnicornInput,_Component);function UnicornInput(){var _getPrototypeOf2;var _this;_classCallCheck(this,UnicornInput);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(UnicornInput)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={name:'',avatar:'',foodLevel:0};_this.addUnicorn=function(){var task={name:_this.state.name,avatar:_this.state.avatar,foodLevel:_this.state.foodLevel};if(task.name&&task.name.length>0&&task.avatar&&task.avatar.length>0){axios.post('/api/unicorns',task).then(function(res){if(res.data){_this.props.getUnicorns();_this.setState({name:'',avatar:'',foodLevel:0});}}).catch(function(err){return console.log(err);});}else{if(!task.name){console.log('name field required');}if(!task.avatar){console.log('avatar field required');}}};_this.handleNameChange=function(e){_this.setState({name:e.target.value});};_this.handleAvatarChange=function(e){_this.setState({avatar:e});};return _this;}_createClass(UnicornInput,[{key:\"render\",value:function render(){var name=this.state.name;return React.createElement(\"div\",{className:\"UnicornInput\"},React.createElement(\"div\",null,React.createElement(\"p\",null,\"Name: \"),React.createElement(\"input\",{type:\"text\",onChange:this.handleNameChange,value:name}),React.createElement(\"p\",null,\"Avatar: \"),React.createElement(RadioGroup,{onChange:this.handleAvatarChange,horizontal:true},React.createElement(RadioButton,{value:\"cupcake\"},\"Cupcake\"),React.createElement(RadioButton,{value:\"icecream\"},\"Ice Cream\"),React.createElement(RadioButton,{value:\"donut\"},\"Donut\"),React.createElement(RadioButton,{value:\"mermaid\"},\"Mermaid\"),React.createElement(RadioButton,{value:\"rainbow\"},\"Rainbow\"))),React.createElement(\"button\",{onClick:this.addUnicorn},\"add unicorn\"));}}]);return UnicornInput;}(Component);export default UnicornInput;","map":{"version":3,"sources":["/Users/megangoodling/Projects/megans-website/client/src/components/molecules/UnicornInput/UnicornInput.js"],"names":["React","Component","RadioGroup","RadioButton","axios","UnicornInput","state","name","avatar","foodLevel","addUnicorn","task","length","post","then","res","data","props","getUnicorns","setState","catch","err","console","log","handleNameChange","e","target","value","handleAvatarChange"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,qBAAxC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,Y,uZAEJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,MAAM,CAAE,EAFF,CAGNC,SAAS,CAAE,CAHL,C,OAMRC,U,CAAa,UAAM,CACjB,GAAMC,CAAAA,IAAI,CAAG,CAACJ,IAAI,CAAE,MAAKD,KAAL,CAAWC,IAAlB,CACCC,MAAM,CAAE,MAAKF,KAAL,CAAWE,MADpB,CAECC,SAAS,CAAE,MAAKH,KAAL,CAAWG,SAFvB,CAAb,CAIA,GAAGE,IAAI,CAACJ,IAAL,EAAaI,IAAI,CAACJ,IAAL,CAAUK,MAAV,CAAmB,CAAhC,EAAqCD,IAAI,CAACH,MAA1C,EAAoDG,IAAI,CAACH,MAAL,CAAYI,MAAZ,CAAqB,CAA5E,CAA8E,CAC5ER,KAAK,CAACS,IAAN,CAAW,eAAX,CAA4BF,IAA5B,EACGG,IADH,CACQ,SAAAC,GAAG,CAAI,CACX,GAAGA,GAAG,CAACC,IAAP,CAAY,CACV,MAAKC,KAAL,CAAWC,WAAX,GACA,MAAKC,QAAL,CAAc,CAACZ,IAAI,CAAE,EAAP,CAAWC,MAAM,CAAE,EAAnB,CAAuBC,SAAS,CAAE,CAAlC,CAAd,EACD,CACF,CANH,EAOGW,KAPH,CAOS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAPZ,EAQD,CATD,IASO,CACL,GAAI,CAACV,IAAI,CAACJ,IAAV,CAAe,CACbe,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACD,CACD,GAAI,CAACZ,IAAI,CAACH,MAAV,CAAiB,CACfc,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACD,CACF,CACF,C,OAEDC,gB,CAAmB,SAACC,CAAD,CAAO,CACxB,MAAKN,QAAL,CAAc,CACZZ,IAAI,CAAEkB,CAAC,CAACC,MAAF,CAASC,KADH,CAAd,EAGD,C,OAEDC,kB,CAAqB,SAACH,CAAD,CAAO,CAC1B,MAAKN,QAAL,CAAc,CACZX,MAAM,CAAEiB,CADI,CAAd,EAGD,C,+EAES,IACFlB,CAAAA,IADE,CACO,KAAKD,KADZ,CACFC,IADE,CAGR,MACE,4BAAK,SAAS,CAAC,cAAf,EACE,+BACE,sCADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAG,KAAKiB,gBAAnC,CAAsD,KAAK,CAAEjB,IAA7D,EAFF,CAGE,wCAHF,CAKE,oBAAC,UAAD,EAAY,QAAQ,CAAG,KAAKqB,kBAA5B,CAAiD,UAAU,KAA3D,EACE,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,YADF,CAIE,oBAAC,WAAD,EAAa,KAAK,CAAC,UAAnB,cAJF,CAOE,oBAAC,WAAD,EAAa,KAAK,CAAC,OAAnB,UAPF,CAUE,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,YAVF,CAaE,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,YAbF,CALF,CADF,CAyBE,8BAAQ,OAAO,CAAE,KAAKlB,UAAtB,gBAzBF,CADF,CA6BD,C,0BA5EwBT,S,EA+E3B,cAAeI,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport { RadioGroup, RadioButton } from 'react-radio-buttons'\nimport axios from 'axios'\n\nclass UnicornInput extends Component {\n\n  state = {\n    name: '',\n    avatar: '',\n    foodLevel: 0\n  }\n\n  addUnicorn = () => {\n    const task = {name: this.state.name,\n                  avatar: this.state.avatar,\n                  foodLevel: this.state.foodLevel}\n\n    if(task.name && task.name.length > 0 && task.avatar && task.avatar.length > 0){\n      axios.post('/api/unicorns', task)\n        .then(res => {\n          if(res.data){\n            this.props.getUnicorns()\n            this.setState({name: '', avatar: '', foodLevel: 0})\n          }\n        })\n        .catch(err => console.log(err))\n    } else {\n      if (!task.name){\n        console.log('name field required')\n      }\n      if (!task.avatar){\n        console.log('avatar field required')\n      }\n    }\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleAvatarChange = (e) => {\n    this.setState({\n      avatar: e\n    })\n  }\n\n  render () {\n    let { name } = this.state\n\n    return (\n      <div className='UnicornInput'>\n        <div>\n          <p>Name: </p>\n          <input type='text' onChange={ this.handleNameChange } value={name} />\n          <p>Avatar: </p>\n\n          <RadioGroup onChange={ this.handleAvatarChange } horizontal >\n            <RadioButton value=\"cupcake\" >\n              Cupcake\n            </RadioButton>\n            <RadioButton value=\"icecream\">\n              Ice Cream\n            </RadioButton>\n            <RadioButton value=\"donut\">\n              Donut\n            </RadioButton>\n            <RadioButton value=\"mermaid\">\n              Mermaid\n            </RadioButton>\n            <RadioButton value=\"rainbow\">\n              Rainbow\n            </RadioButton>\n          </RadioGroup>\n          \n        </div>\n        <button onClick={this.addUnicorn}>add unicorn</button>\n      </div>\n    )\n  }\n}\n\nexport default UnicornInput"]},"metadata":{},"sourceType":"module"}